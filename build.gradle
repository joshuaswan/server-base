allprojects {
    group 'com.joshua.base'
    version '1.0-SNAPSHOT'

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "maven-publish"
//    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = "1.8"
    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"

    project.ext {
        antVersion = '1.9.7'
        jschVersion = '0.1.54'
        shadowjarVersion = '1.2.3'
        servletVersion = "3.1.0"
        javaxInjectVersion = "1"
        jerseyVersion = "2.7"
        jacksonVersion = '2.6.1'
        grizzlyVersion = "2.3.22"
        jettyVersion = "9.2.2.v20140723"
        springVersion = "4.2.5.RELEASE"
        aspectjVersion = "1.8.9"
        validationVersion = "1.1.0.Final"
        apacheCommonVersion = "2.2"
        commonsNetVersion = '3.4'
        commonsLangVersion = '2.6'
        commonsCodecVersion = '1.9'
        commonsBeanutilsVersion = '1.9.2'
        findbugsVersion = '3.0.0'
        pdfboxVersions = '2.0.0'
        lowagieItextVersions = '4.2.1'
        dubboVersion = "2.5.3"
        fastjsonVersion = "1.2.7"
        zookeeperVersion = "3.3.3"
        zkclientVersion = "0.1"
        jpaVersion = "2.1.0"
        c3p0Version = "0.9.5-pre8"
        guavaVersion = "19.0-rc1"
        flywayVersion = "3.0"
        slf4jVersion = "1.7.12"
        logbackVersion = "1.1.3"
        hibernateVersion = "5.0.1.Final"
        mysqlVersion = "5.1.31"
        junitVersion = "4.12"
        nginxparserVersion = "0.9.6"
    }

    buildscript {
        repositories {
            maven { url "http://172.93.34.40:8081/nexus/content/groups/public/" };
            jcenter();
            mavenCentral();
        }

        dependencies {
            classpath "org.apache.ant:ant:1.9.7"
            classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        }
    }

    repositories {
        maven { url "http://172.93.34.40:8081/nexus/content/groups/public/" }
        maven { url "http://repo.spring.io/release" }
        jcenter();
        mavenCentral()
    }

    dependencies {
        compile "javax.servlet:javax.servlet-api:$servletVersion"
        compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
        compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVersion"
        compile "org.glassfish.jersey.containers:jersey-container-jetty-http:$jerseyVersion"
        compile "org.glassfish.jersey.ext:jersey-spring3:$jerseyVersion"
        compile "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion"

        compile("org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion") {
            exclude group: "org.codehaus.jackson"
        }
        compile "org.glassfish.jersey.core:jersey-client:$jerseyVersion"

        compile "org.glassfish.grizzly:grizzly-http-servlet:$grizzlyVersion"
        compile "org.eclipse.jetty:jetty-server:$jettyVersion"
        compile "javax.inject:javax.inject:$javaxInjectVersion"
        compile "org.eclipse.persistence:javax.persistence:$jpaVersion"
//        compile "com.mchange:c3p0:$c3p0Version"

        compile "org.flywaydb:flyway-core:$flywayVersion"

        compile "org.hibernate:hibernate-c3p0:$hibernateVersion"
        compile "com.github.odiszapc:nginxparser:$nginxparserVersion"

        runtime "mysql:mysql-connector-java:$mysqlVersion"
        compile "org.springframework:spring-context-support:$springVersion"
        compile "org.springframework:spring-web:$springVersion"
        compile "org.springframework:spring-tx:$springVersion"
        compile "org.springframework:spring-jdbc:$springVersion"
        compile "org.springframework:spring-orm:$springVersion"

        compile "org.aspectj:aspectjweaver:$aspectjVersion"
        compile "org.aspectj:aspectjrt:$aspectjVersion"

        compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"

        compile "javax.validation:validation-api:$validationVersion"

        compile "commons-lang:commons-lang:$commonsLangVersion"
        compile "commons-io:commons-io:$apacheCommonVersion"
        compile "commons-net:commons-net:$commonsNetVersion"
        compile "commons-codec:commons-codec:$commonsCodecVersion"
        compile "commons-beanutils:commons-beanutils:$commonsBeanutilsVersion"

        compile "com.google.code.findbugs:jsr305:$findbugsVersion"

        compile "org.apache.pdfbox:pdfbox:$pdfboxVersions"
        compile "com.lowagie:itext:$lowagieItextVersions"

//    compile("com.alibaba:dubbo:$dubboVersion") {
//        exclude group: "org.springframework"
//    }

//    compile "com.alibaba:fastjson:$fastjsonVersion"

        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:$jacksonVersion"
        compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:$jacksonVersion"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
        compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"

        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
        compile "org.slf4j:log4j-over-slf4j:$slf4jVersion"
        compile "ch.qos.logback:logback-classic:$logbackVersion"

        compile "com.google.guava:guava:$guavaVersion"

        compile "com.jcraft:jsch:$jschVersion"
        testCompile "junit:junit:$junitVersion"
    }

//    shadowJar {
//        manifest {
//            attributes("Main-Class": "com.idebugs.Launcher")
//        }
//        mergeServiceFiles {
//            include('META-INF/spring.factories', 'META-INF/spring.handlers', 'META-INF/spring.schemas', 'META-INF/spring.tooling')
//        }
//        exclude('META-INF/MANIFEST.MF', '**/*.RSA', '**/*.SF', '**/*.DSA')
//    }

    sourceSets {
        main {
            resources {
                srcDirs += 'src/main/webapp'
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
        repositories {
            maven {
                url 'http://172.93.34.40:8081/nexus/content/repositories/server-base/'
                credentials {
                    username 'admin'
                    password 'admin123'
                }
            }
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
    }
}